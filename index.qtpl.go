// Code generated by qtc from "index.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line index.qtpl:1
package main

//line index.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line index.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line index.qtpl:4
type Index struct {
	Tree *Tree

	DjinnServer string
}

//line index.qtpl:12
func streamrenderImages(qw422016 *qt422016.Writer, imgs []*Image) {
//line index.qtpl:12
	qw422016.N().S(` `)
//line index.qtpl:13
	if len(imgs) > 0 {
//line index.qtpl:13
		qw422016.N().S(` <div class="panel"> `)
//line index.qtpl:15
		for i, img := range imgs {
//line index.qtpl:15
			qw422016.N().S(` `)
//line index.qtpl:16
			if i == 0 && img.Group != "" {
//line index.qtpl:16
				qw422016.N().S(` <div class="panel-header"><h3>`)
//line index.qtpl:17
				qw422016.E().S(img.Group)
//line index.qtpl:17
				qw422016.N().S(`</h3></div> `)
//line index.qtpl:18
			}
//line index.qtpl:18
			qw422016.N().S(` <div class="panel-row"> <div class="left"> <a href="`)
//line index.qtpl:21
			qw422016.E().S(img.Endpoint())
//line index.qtpl:21
			qw422016.N().S(`">`)
//line index.qtpl:21
			qw422016.E().S(img.Name)
//line index.qtpl:21
			qw422016.N().S(`</a> `)
//line index.qtpl:22
			if img.Link != "" {
//line index.qtpl:22
				qw422016.N().S(` <br/><span class="muted">&rarr; `)
//line index.qtpl:23
				qw422016.E().S(img.Link)
//line index.qtpl:23
				qw422016.N().S(`</span> `)
//line index.qtpl:24
			}
//line index.qtpl:24
			qw422016.N().S(` </div> <div class="right muted" title="Last modified">`)
//line index.qtpl:26
			qw422016.E().S(img.ModTime.Format("Mon, 02 Jan 2006"))
//line index.qtpl:26
			qw422016.N().S(`</div> </div> `)
//line index.qtpl:28
		}
//line index.qtpl:28
		qw422016.N().S(` </div> `)
//line index.qtpl:30
	}
//line index.qtpl:30
	qw422016.N().S(` `)
//line index.qtpl:31
}

//line index.qtpl:31
func writerenderImages(qq422016 qtio422016.Writer, imgs []*Image) {
//line index.qtpl:31
	qw422016 := qt422016.AcquireWriter(qq422016)
//line index.qtpl:31
	streamrenderImages(qw422016, imgs)
//line index.qtpl:31
	qt422016.ReleaseWriter(qw422016)
//line index.qtpl:31
}

//line index.qtpl:31
func renderImages(imgs []*Image) string {
//line index.qtpl:31
	qb422016 := qt422016.AcquireByteBuffer()
//line index.qtpl:31
	writerenderImages(qb422016, imgs)
//line index.qtpl:31
	qs422016 := string(qb422016.B)
//line index.qtpl:31
	qt422016.ReleaseByteBuffer(qb422016)
//line index.qtpl:31
	return qs422016
//line index.qtpl:31
}

//line index.qtpl:33
func streamrenderTree(qw422016 *qt422016.Writer, depth int, t *Tree) {
//line index.qtpl:33
	qw422016.N().S(` `)
//line index.qtpl:34
	if depth == 1 {
//line index.qtpl:34
		qw422016.N().S(` <h2>`)
//line index.qtpl:35
		qw422016.E().S(t.Name())
//line index.qtpl:35
		qw422016.N().S(`</h2> `)
//line index.qtpl:36
	} else if depth == 2 {
//line index.qtpl:36
		qw422016.N().S(` <h3 class="accordion accordion-open muted" data-accordion="`)
//line index.qtpl:37
		qw422016.E().S(t.Name())
//line index.qtpl:37
		qw422016.N().S(`">`)
//line index.qtpl:37
		qw422016.E().S(t.Name())
//line index.qtpl:37
		qw422016.N().S(`</h3> `)
//line index.qtpl:38
	}
//line index.qtpl:38
	qw422016.N().S(` `)
//line index.qtpl:39
	if t.HasChildren() {
//line index.qtpl:39
		qw422016.N().S(` <div data-accordion-body="`)
//line index.qtpl:40
		qw422016.E().S(t.Name())
//line index.qtpl:40
		qw422016.N().S(`"> `)
//line index.qtpl:41
		for _, child := range t.Children() {
//line index.qtpl:41
			qw422016.N().S(` `)
//line index.qtpl:42
			streamrenderTree(qw422016, depth+1, child)
//line index.qtpl:42
			qw422016.N().S(` `)
//line index.qtpl:43
		}
//line index.qtpl:43
		qw422016.N().S(` </div> `)
//line index.qtpl:45
	}
//line index.qtpl:45
	qw422016.N().S(` `)
//line index.qtpl:46
	streamrenderImages(qw422016, t.Images())
//line index.qtpl:46
	qw422016.N().S(` `)
//line index.qtpl:47
}

//line index.qtpl:47
func writerenderTree(qq422016 qtio422016.Writer, depth int, t *Tree) {
//line index.qtpl:47
	qw422016 := qt422016.AcquireWriter(qq422016)
//line index.qtpl:47
	streamrenderTree(qw422016, depth, t)
//line index.qtpl:47
	qt422016.ReleaseWriter(qw422016)
//line index.qtpl:47
}

//line index.qtpl:47
func renderTree(depth int, t *Tree) string {
//line index.qtpl:47
	qb422016 := qt422016.AcquireByteBuffer()
//line index.qtpl:47
	writerenderTree(qb422016, depth, t)
//line index.qtpl:47
	qs422016 := string(qb422016.B)
//line index.qtpl:47
	qt422016.ReleaseByteBuffer(qb422016)
//line index.qtpl:47
	return qs422016
//line index.qtpl:47
}

//line index.qtpl:49
func (p *Index) StreamRender(qw422016 *qt422016.Writer) {
//line index.qtpl:49
	qw422016.N().S(` <!DOCTYPE HTML> <html lang="en"> <head> <meta charset="utf-8"> <meta content="width=device-width, initial-scale=1" name="viewport"> <title>Djinn CI Images</title> <style type="text/css">`)
//line index.qtpl:56
	qw422016.N().S(`* {margin: 0;padding: 0;}body {font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Sego UI Symbol";font-size: 14px;background: #eee;color: #444;}a {color: #146de0;cursor: pointer;text-decoration: none;}a:hover {text-decoration: underline;}.title {text-align: center;}.logo {margin-top: -5px;margin-right: 30px;margin-bottom: 15px;display: inline-block;vertical-align: middle;width: 0;}.logo .handle {margin-left: -3px;border-style: solid;border-width: 2px 0px 8px 7px;border-color: transparent transparent transparent #cacaca;}.logo .lid {margin-bottom: -20px;margin-left: 13px;border-style: solid;border-width: 5px 0px 7px 5px;border-color: transparent transparent transparent #cacaca;}.logo .lantern {margin-left: -5px;border-style: solid;border-width: 15px 15px 35px 0px;border-color: transparent #cacaca transparent transparent;}h1 {margin-bottom: 15px;}h3 {margin-top: 10px;}.accordion {cursor: pointer;font-style: italic;}.accordion-open:before {content: '-';margin-right: 10px;}.accordion-closed:before {content: '+';margin-right: 10px;}.accordion:hover {color: #8f8f8f;}.tree-header {margin-top: 15px;}ul.tree {margin-left: 30px;}ul.tree li {list-style: none;}.left {float: left;}.right {float: right;}.muted {color: #9f9f9f;}.pill {display: inline-block;text-align: center;padding: 3px;padding-left: 10px;padding-right: 10px;vertical-align: middle;background: #61a0ea;color: #fff;border-radius: 25px;}.pill:hover {text-decoration: none;background: #5090d9;}.panel + .panel {margin-top: 15px;}.panel {background: #fff;border-radius: 3px;box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.1);}.panel-header {border-bottom: solid 1px #e4e4e4;}.panel-header h3 {padding: 10px;font-weight: 700;}.panel .panel-body {padding: 15px;}.panel .panel-row {overflow: auto;padding: 10px;padding-left: 15px;padding-right: 15px;}.panel-row + .panel-row {border-top: solid 1px #e4e4e4;}.content {margin: 0 auto;max-width: 800px;padding: 20px;}.col-75 {width: 75%;box-sizing: border-box;}.col-25 {width: 25%;box-sizing: border-box;}.col-left {float: left;padding-right: 5px;}.col-right {float: right;padding-left: 5px;}.overflow {overflow: auto;padding-bottom: 5px;}@media (max-width: 1100px) {.col-75 {margin-bottom: 10px;width: 100%;}.col-25 {margin-bottom: 10px;width: 100%;}.col-left {padding-right: 0px;float: none;}.col-right {padding-left: 0px;float: none;}}`)
//line index.qtpl:56
	qw422016.N().S(`</style> </head> <body> <div class="content"> <div class="title"> <div class="logo"> <div class="handle"></div> <div class="lid"></div> <div class="lantern"></div> </div> <h2>Djinn CI Images</h2> `)
//line index.qtpl:67
	if p.DjinnServer != "" {
//line index.qtpl:67
		qw422016.N().S(` <a target="_blank" href="`)
//line index.qtpl:68
		qw422016.E().S(p.DjinnServer)
//line index.qtpl:68
		qw422016.N().S(`">Back to Djinn CI</a> `)
//line index.qtpl:69
	}
//line index.qtpl:69
	qw422016.N().S(` </div> `)
//line index.qtpl:71
	streamrenderTree(qw422016, 0, p.Tree)
//line index.qtpl:71
	qw422016.N().S(` </div> </body> <footer> <script type="text/javascript"> var els = document.querySelectorAll("[data-accordion]"); var tab = {}; for (var i = 0; i < els.length; i++) { var target = els[i].dataset.accordion; tab[target] = document.querySelector("[data-accordion-body="+target+"]"); } for (var i = 0; i < els.length; i++) { els[i].addEventListener("click", function(e) { e.preventDefault(); if (e.target.dataset.accordion in tab) { var el = tab[e.target.dataset.accordion]; el.hidden = !el.hidden; if (el.hidden) { e.target.classList.remove("accordion-open"); e.target.classList.add("accordion-closed"); } else { e.target.classList.remove("accordion-closed"); e.target.classList.add("accordion-open"); } } }); } </script> </footer> </html> `)
//line index.qtpl:108
}

//line index.qtpl:108
func (p *Index) WriteRender(qq422016 qtio422016.Writer) {
//line index.qtpl:108
	qw422016 := qt422016.AcquireWriter(qq422016)
//line index.qtpl:108
	p.StreamRender(qw422016)
//line index.qtpl:108
	qt422016.ReleaseWriter(qw422016)
//line index.qtpl:108
}

//line index.qtpl:108
func (p *Index) Render() string {
//line index.qtpl:108
	qb422016 := qt422016.AcquireByteBuffer()
//line index.qtpl:108
	p.WriteRender(qb422016)
//line index.qtpl:108
	qs422016 := string(qb422016.B)
//line index.qtpl:108
	qt422016.ReleaseByteBuffer(qb422016)
//line index.qtpl:108
	return qs422016
//line index.qtpl:108
}
